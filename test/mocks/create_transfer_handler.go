// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"
)

// CreateTransferHandler is an autogenerated mock type for the CreateTransferHandler type
type CreateTransferHandler struct {
	mock.Mock
}

type CreateTransferHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *CreateTransferHandler) EXPECT() *CreateTransferHandler_Expecter {
	return &CreateTransferHandler_Expecter{mock: &_m.Mock}
}

// Handle provides a mock function with given fields: c
func (_m *CreateTransferHandler) Handle(c *gin.Context) {
	_m.Called(c)
}

// CreateTransferHandler_Handle_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Handle'
type CreateTransferHandler_Handle_Call struct {
	*mock.Call
}

// Handle is a helper method to define mock.On call
//   - c *gin.Context
func (_e *CreateTransferHandler_Expecter) Handle(c interface{}) *CreateTransferHandler_Handle_Call {
	return &CreateTransferHandler_Handle_Call{Call: _e.mock.On("Handle", c)}
}

func (_c *CreateTransferHandler_Handle_Call) Run(run func(c *gin.Context)) *CreateTransferHandler_Handle_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *CreateTransferHandler_Handle_Call) Return() *CreateTransferHandler_Handle_Call {
	_c.Call.Return()
	return _c
}

func (_c *CreateTransferHandler_Handle_Call) RunAndReturn(run func(*gin.Context)) *CreateTransferHandler_Handle_Call {
	_c.Call.Return(run)
	return _c
}

// NewCreateTransferHandler creates a new instance of CreateTransferHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCreateTransferHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *CreateTransferHandler {
	mock := &CreateTransferHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
